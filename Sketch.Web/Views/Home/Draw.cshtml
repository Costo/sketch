@using Newtonsoft.Json
@using Sketch.Web.Serialization
@model  Sketch.Web.Models.DrawingSessionPhotoViewModel
<div>
    <header ng-init='nextPageUrl = "@Model.NextPageUrl"' ng-controller='PhotoCtrl'>
        <h1>Stock photo @(Model.NumberOfElapsedPhotos + 1)/@Model.TotalNumberOfPhotos</h1>
        <div class="progress">
          <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: @Model.PercentageOfCompletion%">
          </div>
        </div>
        <span ng-init='timeLeft = @Model.DurationInMilliseconds' ng-controller='TimerCtrl'>
            <span>{{minutes}}</span>:<span>{{seconds}}</span>
        </span>
        @using (Html.BeginForm("Replace", "Home", new { id= Model.DrawingSessionId, index = Model.IndexOfPhoto } ))
        {
            <button type="submit" class='btn'>Replace</button>
        }
    </header>
    <div class='row'>
        <div class='col-md-12'>
            
            <div class="img-container" style='background: url(@Model.ImageUrl) 50% 50% no-repeat; background-size: contain'></div>
        </div>
    </div>
</div>
@section scripts
{
    @{
        var settings = new JsonSerializerSettings
                           {
                               ContractResolver = new DrawingSessionContractResolver()
                           };
        settings.Converters.Add(new TimeSpanJsonConverter());
    }
    <script>

        resizePhoto();
        $(window).on('resize', resizePhoto);


        function resizePhoto() {
            $('.img-container').height($(window).height() - $('header').height());
        }

        function PhotoCtrl($scope) {
            $scope.nextPageUrl = '';

            $scope.$on('my:timerElapsed', function () {
                window.location.href = $scope.nextPageUrl;
            });

        }

        function TimerCtrl($scope) {
            var spaceBarHitCount = 0;
            
            $scope.timeLeft = 0;

            $scope.$on('my:keypress', function(event, keyboardEvent) {
                if (keyboardEvent.charCode === 32 /*space bar*/) {
                    event.preventDefault();
                    if (++spaceBarHitCount % 2 == 0) {
                        startTimer();
                    } else {
                        stopTimer();
                    }
                }
            });

            startTimer();
            
            function startTimer() {
                var currentTime = new Date().getTime();
                $scope.timer = setInterval(function () {
                    $scope.$apply(function () {
                        var previousTime = currentTime;
                        currentTime = new Date().getTime();
                        $scope.timeLeft = Math.max($scope.timeLeft - currentTime + previousTime, 0);
                        if ($scope.timeLeft === 0) {
                            clearInterval($scope.timer);
                            $scope.$emit('my:timerElapsed');
                        }

                        $scope.minutes = Math.floor($scope.timeLeft / 1000 / 60);
                        var s = Math.floor($scope.timeLeft / 1000 - $scope.minutes * 60);
                        if ((s + '').length <= 1) s = '0' + s;
                        $scope.seconds = s;
                    });
                }, 100);
            }
            
            function stopTimer()
            {
                clearInterval($scope.timer);
            }
        }
    </script>
}